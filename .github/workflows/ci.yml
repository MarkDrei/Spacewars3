name: CI

on:
  push:
    branches: ['**']  # Run on all branches
  pull_request:
    branches: ['**']  # Run on PRs to all branches

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Run type check
      run: npx tsc --noEmit
      continue-on-error: true  # Don't fail build on type errors yet

    - name: Run tests
      run: npm test -- --run

    - name: Build application
      run: npm run build

  visual-testing:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright
      run: |
        npm install playwright
        npx playwright install --with-deps chromium

    - name: Start application in dev mode
      run: npm run dev &
      env:
        PORT: 3000

    - name: Wait for application to be ready
      run: |
        echo "Waiting for dev server to be ready..."
        timeout 120 bash -c 'until curl -f http://localhost:3000 > /dev/null 2>&1; do echo "Waiting..."; sleep 3; done'
        echo "Dev server is ready!"
        sleep 5

    - name: Create screenshots directory
      run: mkdir -p screenshots

    - name: Capture screenshots with authentication
      run: node scripts/take-screenshots.js
      continue-on-error: true

    - name: Upload screenshots
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: screenshots
        path: screenshots/
        retention-days: 7
